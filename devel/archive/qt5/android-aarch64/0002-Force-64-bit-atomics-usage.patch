From 95b37ab2ddb476326fd803c7b0551ac3b88215b9 Mon Sep 17 00:00:00 2001
From: Martchus <martchus@gmx.net>
Date: Wed, 16 Sep 2020 18:18:26 +0200
Subject: [PATCH 2/2] Force 64-bit atomics usage

From hipersayan_x's AUR package (added with 5.14.2 update).

Change-Id: I0c94983b5ddc2897eeabbd6ef4703f455d23f9a2
---
 src/corelib/configure.json | 16 +++-------------
 1 file changed, 3 insertions(+), 13 deletions(-)

diff --git a/src/corelib/configure.json b/src/corelib/configure.json
index c5e0423273..bd7ef73fe0 100644
--- a/src/corelib/configure.json
+++ b/src/corelib/configure.json
@@ -135,27 +135,17 @@
             "label": "64 bit atomics",
             "test": {
                 "tail": [
-                    "void test(volatile std::atomic<std::int64_t> &a)",
+                    "void test()",
                     "{",
-                    "    std::int64_t v = a.load(std::memory_order_acquire);",
-                    "    while (!a.compare_exchange_strong(v, v + 1,",
-                    "                                      std::memory_order_acq_rel,",
-                    "                                      std::memory_order_acquire)) {",
-                    "        v = a.exchange(v - 1);",
-                    "    }",
-                    "    a.store(v + 1, std::memory_order_release);",
                     "}"
                 ],
                 "main": [
-                    "void *ptr = (void*)0xffffffc0; // any random pointer",
-                    "test(*reinterpret_cast<std::atomic<std::int64_t> *>(ptr));"
+                    "test();"
                 ],
                 "qmake": "CONFIG += c++11"
             },
-            "headers": [ "atomic", "cstdint" ],
             "sources": [
-                "",
-                "-latomic"
+                ""
             ]
         },
         "librt": {
-- 
2.28.0

